<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAACwlJREFUeF7t
        nEtMHMkZxx0pUR7KJVIiJYdckkMi5RApxyhSLskpUpRDohxyySFaKRtlFXs8wBg/2I3t3fVm/VrPwAxg
        WLC9GPBrwcZvDMyThw3GsOAHNsZvL+ZhsAFvXKl/pcoaj7/q6i7Gdivhk34y/qar5l//qa7urq7uZUux
        FEvxqiJYmvir/HMpvMTyzcmvF8WSW1dG4k9laincxBvR7q8Ew/E/FsXSt95r6J/lBjL50VI4RSDa+u3C
        ssTqwmjy87d3nX1Yf26ctd9hbMlAhyiIxH9UEE28VVyR7i6KJh9vOTQ0d+DCpDBOsWSgjDfDrd8MhOO/
        CJbGlxdXZpoKY8mJVZWZmS3Nw/N7z37Oztz693PG/V8aWBLt/kYgmvxxoCz+60Ak/peiWOqjUHk6zv+9
        y3va3Du7zk1vb7m4sLvzLjs6Mkcalgtl4N+3H/kqr3+7/O/rDwgqinR8C4S2t39neaTjB2BFWcdPV4ST
        P18Z6fhVMNLxh2A48Wf+79+Koqn1xZXpncUVmZZQReZcqDw1WhBNzhSUJRfWVndNbazvn9p2+OJ8RdsY
        qz87zlquPGZthDlueM5Axr60IhL/Lf9Brr70nrki3PZ9/iWNnGl8mRN84J7nBszx04bHfPeaLt7ZObOG
        G1FS0zNVUtsztaGud2LTvoHJrc3DM6UnRhZgTE3yNvuk+z5r7JtgTcMz7OTYE9KAxQJ9JVWtXxNH5vLU
        INc13dA7/hR52dT8hzRvXBmkgxLsN6CT/8APN9T1Tdb13Gdtt58+y8vm5j945eh5z5lFkSvWj0DnUT4E
        UHnZ3PwHr9y424JcUX5EpxN52dz8R7ZJTlDC/IZOJ/Kyuc8CZwArw/H98r/2kW2SE5Qwv6HTiTzaKk6d
        SuN/ClWk0vyUKT+XfsogE5Qwv6HTiTw/ferkB5jHmxoHpur4GcEZfoBBXtpgH8ogE5Qwv6HTiTyuYFpv
        fPFCXtpgH8ogE9lf7Fd0Op3y0gb7UAaZoAT4DZ1Op7y0wT6UQSYoAX5Dp9MpL22wD2WQCUqA39DpdMpL
        G+xDGWSCEuCW03zw3nH0Cj8SptkqTpj/jRy17WLQ6XTKSxvsQxlkghLghrbbjL3b0P9Cfe839ovPqDK2
        6HQ65aUN9qEaZIIS4IbdmbtkfQBzfVQZW1Cn17y0wT5UY0xQAtxA9T7F+40XyDK2oE6veWmDfajGmKAE
        uAHjHlUfwHhIlbEFdXrNSxvsQzXGBCXADQVlCbI+UFCaIMvYgjq95qUN9qEaY4IS4IY1VV1kfWBtdRdZ
        xhbU6TUvbbAP1RgTlAA3bG0eJusD2w5fJMvYgjq95qUN9qEaY4IS4IZPhx6yYOmL9SHXxD+jytii0+mU
        lzbYh2qQCUqAW3Z23GDBrLrwdxXPUdsuBp1Op7y0wT5Uo0xQArxw4MIUvxq5LDjI/6a2WSw6nU55aYN9
        KINMUAL8hk6nU17aYB/KIBOUAL+h0+mUlzbYhzLIBCXAhtNjXzy7X5tvdDqd8tIG+1AGmaAEuOFA/6QY
        99Z93M1PqpPP6gtVpNnGvedZ2clr7PDFWbKsV3Q6nfLSBvtQDTJBCXACa1w27R8g66LAtihD1eUW1OM1
        L22wD9UAE5QAHU1DM6KHUfU4URhNips/VJ1uQB1e89IG+1DiTVACKLC0wsY8RZBfH+/tsTMR5b3mpQ32
        oYSboARQbNp3gSzvhaJYih2+5H1cRFmveWmDfSjRJigBuWD3o8ragAOM13WCKOc1L22wDyXYBCUgFy8H
        DTd4HQ9Rxmte2mAfSqwJSkA2x67Oi/GLKmvLxr195HfpQBmveWmDfSixJigB2eD+BlXOFky21qRuk9+l
        A+W85qUN9qEEm6AEZBM5PkKWswGTsIcGp8nvcQJlvealDfahRJugBGTzbv15spwXCvnRt7z1Omu9ST/G
        YAJ1eM1LG+xDiTdBCcimpLaHLOeGtfwyD4vRT1ybJ+t2C+rympc22IdqhAlKQDbFlRmyHAUONuv39LLo
        qWtibjBfN9hRt9e8tME+VKNMUAKywWWYWLpRkRETByU1PcKk9xr6xb2P2OlrbFfmjpjit91FTeh0OuWl
        DfahDDJBCfAbOp1OeWmDfSiDTFAC/IZOp1Ne2mAfyiATlICXxanrT8Q5IIYA6nMdOp1OeWmDfSiDTFAC
        8snJ0QW2p+se23xo6LmJV2pbHbrtnfLSBvtQQk1QAhbDsatz4uFCHInR07LvHWM5yNamYc8n0zqdTnlp
        g30o0SYoARRnbj1lJ68viNllHHH3nZ9geKxgZ/sY+6jlklgXiCN1bv24dMNnVe03xHU1VbcJnU6nvLTB
        PlQDTFACsqHKOLGmqpN9sH+QX3mMMjyyn48Vq6jXa17aYB+qQSYoAdlgG0yEYsnaOn4OuLGujxs0IM4B
        S0+MiB6IJyjRK1/m465e89IG+0AlbqAE+A2dTqe8tME+lEEmKAF+Q6fTKS9tsA9lkAlKgN/Q6XTKSxvs
        QxlkghLgN3Q6nfLSBvtQBpmgBPgNnU6nvLTBPpRBJigBfgIzPDqdTnlpg30og0xQAvwCnv398OBnbFsz
        vWRYpx95aYN9ZJvkBCXAD2C1F+Yccc6JqyBqG51+5KUN9pFtkhOUgNcNVn6tq+kWJ+o684BOP/LSBvvI
        NskJSsDrAtNdO1ouixnwOhfraHT6kZc22Ee2SU5QAl41uF6ubBsTi5e28kvE46ML5Ha56PQjL22wj2yT
        nKAEvCqw4qv0xFVh3IeHPmPNwzPkdhR43ZROP/LSBvvINskJSsDLBLtpbfqOuN+MXRU37o9cfkRumwtO
        aXADC/OMuN2qW2ODdkkb7CPXKB2UgHyClVjNw7NiPhCm4SY7Tk3w0jI3d/FO8aMxtsWMNnoqpsowTea0
        HhvtkjbYR65ROigBiwENxrMjVR032b8ODopG4wY7Dg44MOBzqpwCpy+NfQ/EGmsshSsqT7FN+wbYx8lb
        ridk0S5pg33kGqWDEuCGE3ygPzgwLRYfxU6Pih6C+ULc91j/Sa94/B8PZbdcptdHo2diDGzoHRdzipjq
        f2f3Ob5bp4RxOIWBkW56KerCws1dfGjY0jT0EO2SNtgHr8TVy8dOjT1hx0bmxFQ9ROB+RWPvA7Hb1KZu
        s0reODQGDUTDYBJutqNn/JOPRVs+HRLrXjC9jzXUuHpQDcOSDky0YqyqTtwSB4zNfHsYLCZpKzNsQ12f
        eO8CzMaqftOjErhJBY0YR/mPNLe+rm8C7zzkQ8M4r/NIINzxZjCa+KG0wT6CkcQByrBcMJCvqe4Su1lJ
        7VnRODyN/sGBQWHa9sOXWOTYCCs/M8pquAm1qTt8IL8rXr6IU4+yk1fFPRH0QDypjgEedaEnwmgYjuXB
        eCQC4yDWScNoaqofBxj8iDiR3tN5Tzx3Fzl+5TFe61RS3T3J65wvKEs8WlWRHgzFMnu5/uDKSOI3/4i2
        f082O3+Bt+PyL3iQbZYTuHsGM7NZvbNTLOd4exc3lhuDhZHq8moLN3cHNw67avTUqDCzOn5TmIvdup4b
        hal+9CzcC4Z56Km8t83zXvuQ1zPJd9mJ1dVdk6FYejZYmnhSWJac5T37Jv/u86GKVEtBaWLbytLEW4FI
        +++CO9p/htcky+a9mvjvWywT9dygqVzDvMJ/+TneAx5JZnnvmimKpe8DPm7dC8VSd/gudIP3joucPk4y
        VJ45uqoy3cA/ryiMpjYHIvFVgXB8eSDS8UYgnPh9MNL+y8Id8Z8Ew63fLSlp/bKUvRRL8T8fy5b9B7Ux
        w6cGBOt4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADCzD0Aoug9ALTYPQS02T0PtNo8FbTaPRe02jwUtds9DLbgQAG22z4AtNo9ALTa
        PQK02j0WtNo9GLTaPRi02j0YtNo9GLTaPRi02j0YtNo9GbTaPRC02j0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADn8UsArNc8ALbbPw602jxGtNo9hrTZPb602jzdtNo947TaPNS02z2ttNo9b7PZ
        PTG12EECtNo9FbTaPdG02j3otNo957TaPee02j3ntNo957TaPee02j3stNo9l7TaPQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtNw7ALTdOgKz2Tw2tNo9pbTaPey02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3+tNo92rTaPX612z40tds+57TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j2mtNo9AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALXaPAC22jsDtNo9VbTaPdW02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9+rHZO8eq1TX1tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Paa02j0AAAAAAAAAAAAAAAAAAAAAAAAAAACy2DsAzfNSALTaPEy02j3itNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/rdc3/4PCFv+p1DT/tdo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9prTaPQAAAAAAAAAAAAAAAAAAAAAAz+ZEALPZPQC02j0qtNo9zbTaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+t1zf/cLkG/4XDF/+x2Tr/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j2mtNo9AAAAAAAAAAAAAAAAAAAAAAC12j0Atto9BbTaPYi02j3+tNo9/7Ta
        Pf+02j3/tNo9/7TaPfK02j2xtNo9b7TaPWC02j2AtNo9y7TaPfu02j3/tNo9/63XN/9wuAb/bbcE/57P
        K/+02j3/tNo9/7TaPZO02j1VtNo9W7TaPTq02j0AAAAAAAAAAAAAAAAAAAAAALPaPQCy2z0hs9o93bTa
        Pf+02j3/tNo9/7TaPf+02j3ltNo9Y7bbPw6w3jkAtNw9ALTdPQK12z4dtNo9l7TaPfe02j3/rdc3/3C4
        Bv9otAD/hMMV/7LZO/+02j3/tNo9WbTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtNo9ALTa
        PFm02j31tNo9/7TaPf+02j3/tNo9+bTaPHa02jcCtNo7AAAAAAAAAAAAAAAAALbbPgC22z4WtNo9s7Ta
        Pf+t1zf/cLgG/2i0AP92uwr/qNQz/7XaPv+02j1ZtNo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC02j0AtNo9i7TaPf+02j3/tNo9/7TaPf+02j3NtNo9JLTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAALTa
        PQC02zxVtNo99K3XN/9wuAb/aLUA/263BP+f0Cz/tds+/7TaPVm02j0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALTaPQC02j2gtNo9/7TaPf+02j3/tNo9/7TaPa+z2TkGs9k6AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtNo9ALTaPCW02j3qrdc3/3C4Bv9ptQD/abUB/5vOKf+22z7/tNo9WbTaPQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtNo9ALTaPaG02j3/tNo9/7TaPf+02j3/tNo9rq7XPQWw2D0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAC02j0AtNo9JbTaPeqt1zf/cLgG/2m1AP9ptQH/m84p/7bbPv+02j1ZtNo9AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC02j0As9o9jLTaPf+02j3/tNo9/7TaPf+02j3NtNo9JLTa
        PQAAAAAAAAAAAAAAAAAAAAAAAAAAALTaPQC02z1VtNo99K3XN/9wuAb/aLUA/223BP+f0Cz/tds+/7Ta
        PVm02j0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALTaPQC02j1atNo99bTaPf+02j3/tNo9/7Ta
        Pfm02j11tNo9ArTaPQAAAAAAAAAAAAAAAAC12j0Atdo9FrTaPbK02j3/rdc3/3C4Bv9otAD/drsK/6jU
        M/+12j7/tNo9WbTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs9o9ALPbPiGz2j3dtNo9/7Ta
        Pf+02j3/tNo9/7TaPeW02j1is9k9Dr3cRAC22j8At9pAArXaPBy02j2WtNo997TaPf+t1zf/cLgG/2i1
        AP+EwxX/stk7/7TaPf+02j1ZtNo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACz2j0Asto9BbTa
        PYi02j3+tNo9/7TaPf+02j3/tNo9/7TaPfG02j2wtNo9b7TZPmC02j2AtNo9yrTaPfu02j3/tNo9/63X
        N/9wuAb/bbcD/53PK/+02j3/tNo9/7TaPVm02j0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDm
        RACz2T0AtNo9K7TaPc602j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/rdc3/3C5Bv+Fwxf/sdk6/7TaPf+02j3/tNo9WbTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALHcPQCd5z0AtNs9TrTaPeK02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+t1jf/g8IW/6nUM/+12j3/tNo9/7TaPf+02j1ZtNo9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALXaPAC22jsDtNo9V7TaPde02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9+rHZO8eq1TX1tNo9/7TaPf+02j3/tNo9/7TaPVm02j0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALLYPwCx10ACs9s9OLTaPaa02j3ttNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9/rTaPdu02j1/tNo9NLXbPue02j3/tNo9/7TaPf+02j3/tNo9WbTa
        PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJL4MAC41j8Asts8DrPb
        PUe02j6Hs9o+v7PaPd202j3ks9o91rTaPa602j1wtNs9MsXfQQK02j0VtNo90bTaPei02j3ntNo957Ta
        Pem02j1QtNo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC01EkAtOQtALTbPQSz2j0Ps9o9FbTaPRez2j0Us9o9DLLXOgG02j0AtNo9ALTaPQK02j0WtNo9GLTa
        PRi02j0YtNo9GLTaPQi02j0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////wGAH/wAAB/wAAAf4AAAH+AAAB/AA
        AAfgAAAH4AwAP+AfAD/gP4A/4D+AP+A/gD/gP4A/4B8AP+AMAD/gAAA/8AAAP/gAAD/4AAA//AAAP/8A
        AD//wGA///////////////////////////8=
</value>
  </data>
</root>