<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridView1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADCzD0Aoug9ALTYPQS02T0PtNo8FbTaPRe02jwUtds9DLbgQAG22z4AtNo9ALTa
        PQK02j0WtNo9GLTaPRi02j0YtNo9GLTaPRi02j0YtNo9GbTaPRC02j0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADn8UsArNc8ALbbPw602jxGtNo9hrTZPb602jzdtNo947TaPNS02z2ttNo9b7PZ
        PTG12EECtNo9FbTaPdG02j3otNo957TaPee02j3ntNo957TaPee02j3stNo9l7TaPQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtNw7ALTdOgKz2Tw2tNo9pbTaPey02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3+tNo92rTaPX612z40tds+57TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j2mtNo9AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALXaPAC22jsDtNo9VbTaPdW02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9+rHZO8eq1TX1tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Paa02j0AAAAAAAAAAAAAAAAAAAAAAAAAAACy2DsAzfNSALTaPEy02j3itNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/rdc3/4PCFv+p1DT/tdo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9prTaPQAAAAAAAAAAAAAAAAAAAAAAz+ZEALPZPQC02j0qtNo9zbTaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+t1zf/cLkG/4XDF/+x2Tr/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j2mtNo9AAAAAAAAAAAAAAAAAAAAAAC12j0Atto9BbTaPYi02j3+tNo9/7Ta
        Pf+02j3/tNo9/7TaPfK02j2xtNo9b7TaPWC02j2AtNo9y7TaPfu02j3/tNo9/63XN/9wuAb/bbcE/57P
        K/+02j3/tNo9/7TaPZO02j1VtNo9W7TaPTq02j0AAAAAAAAAAAAAAAAAAAAAALPaPQCy2z0hs9o93bTa
        Pf+02j3/tNo9/7TaPf+02j3ltNo9Y7bbPw6w3jkAtNw9ALTdPQK12z4dtNo9l7TaPfe02j3/rdc3/3C4
        Bv9otAD/hMMV/7LZO/+02j3/tNo9WbTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtNo9ALTa
        PFm02j31tNo9/7TaPf+02j3/tNo9+bTaPHa02jcCtNo7AAAAAAAAAAAAAAAAALbbPgC22z4WtNo9s7Ta
        Pf+t1zf/cLgG/2i0AP92uwr/qNQz/7XaPv+02j1ZtNo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC02j0AtNo9i7TaPf+02j3/tNo9/7TaPf+02j3NtNo9JLTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAALTa
        PQC02zxVtNo99K3XN/9wuAb/aLUA/263BP+f0Cz/tds+/7TaPVm02j0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALTaPQC02j2gtNo9/7TaPf+02j3/tNo9/7TaPa+z2TkGs9k6AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtNo9ALTaPCW02j3qrdc3/3C4Bv9ptQD/abUB/5vOKf+22z7/tNo9WbTaPQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtNo9ALTaPaG02j3/tNo9/7TaPf+02j3/tNo9rq7XPQWw2D0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAC02j0AtNo9JbTaPeqt1zf/cLgG/2m1AP9ptQH/m84p/7bbPv+02j1ZtNo9AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC02j0As9o9jLTaPf+02j3/tNo9/7TaPf+02j3NtNo9JLTa
        PQAAAAAAAAAAAAAAAAAAAAAAAAAAALTaPQC02z1VtNo99K3XN/9wuAb/aLUA/223BP+f0Cz/tds+/7Ta
        PVm02j0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALTaPQC02j1atNo99bTaPf+02j3/tNo9/7Ta
        Pfm02j11tNo9ArTaPQAAAAAAAAAAAAAAAAC12j0Atdo9FrTaPbK02j3/rdc3/3C4Bv9otAD/drsK/6jU
        M/+12j7/tNo9WbTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs9o9ALPbPiGz2j3dtNo9/7Ta
        Pf+02j3/tNo9/7TaPeW02j1is9k9Dr3cRAC22j8At9pAArXaPBy02j2WtNo997TaPf+t1zf/cLgG/2i1
        AP+EwxX/stk7/7TaPf+02j1ZtNo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACz2j0Asto9BbTa
        PYi02j3+tNo9/7TaPf+02j3/tNo9/7TaPfG02j2wtNo9b7TZPmC02j2AtNo9yrTaPfu02j3/tNo9/63X
        N/9wuAb/bbcD/53PK/+02j3/tNo9/7TaPVm02j0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDm
        RACz2T0AtNo9K7TaPc602j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/rdc3/3C5Bv+Fwxf/sdk6/7TaPf+02j3/tNo9WbTaPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALHcPQCd5z0AtNs9TrTaPeK02j3/tNo9/7TaPf+02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+t1jf/g8IW/6nUM/+12j3/tNo9/7TaPf+02j1ZtNo9AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALXaPAC22jsDtNo9V7TaPde02j3/tNo9/7TaPf+02j3/tNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9+rHZO8eq1TX1tNo9/7TaPf+02j3/tNo9/7TaPVm02j0AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALLYPwCx10ACs9s9OLTaPaa02j3ttNo9/7Ta
        Pf+02j3/tNo9/7TaPf+02j3/tNo9/rTaPdu02j1/tNo9NLXbPue02j3/tNo9/7TaPf+02j3/tNo9WbTa
        PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJL4MAC41j8Asts8DrPb
        PUe02j6Hs9o+v7PaPd202j3ks9o91rTaPa602j1wtNs9MsXfQQK02j0VtNo90bTaPei02j3ntNo957Ta
        Pem02j1QtNo9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC01EkAtOQtALTbPQSz2j0Ps9o9FbTaPRez2j0Us9o9DLLXOgG02j0AtNo9ALTaPQK02j0WtNo9GLTa
        PRi02j0YtNo9GLTaPQi02j0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////wGAH/wAAB/wAAAf4AAAH+AAAB/AA
        AAfgAAAH4AwAP+AfAD/gP4A/4D+AP+A/gD/gP4A/4B8AP+AMAD/gAAA/8AAAP/gAAD/4AAA//AAAP/8A
        AD//wGA///////////////////////////8=
</value>
  </data>
</root>